// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  userId             String  @map("user_id")
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  password      String?
  name          String?
  image         String?   @map("profile_picture") 
  emailVerified DateTime? @map("email_verified")
  accounts      Account[]
  sessions      Session[]
  tasklist      TaskList[]
  reminder      Reminder[]
  freeuser      FreeUser[]
  premiumuser   PremiumUser[]
  admin         Admin[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt @default(now())
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("Verification_Token")
}

model TaskList {
  id            String    @id @default(cuid())
  userId        String    @map("user_id")
  title         String
  description   String
  hour          Int?
  minute        Int?
  dateTime      DateTime  @default(now())
  timeExpired   DateTime  
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Reminder {
  id            String    @id @default(cuid())
  userId        String    @map("user_id")
  title         String
  date          String
  time          String
  description   String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Admin {
  id          String  @id @default(cuid())
  userId      String  @map("user_id")
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model FreeUser {
  id              String    @id @default(cuid())
  userId          String    @map("user_id")
  registeredDate  DateTime
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PremiumUser {
  id          String    @id @default(cuid())
  userId      String    @map("user_id")
  expires     DateTime
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}